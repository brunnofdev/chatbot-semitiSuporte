// Dicion√°rio de respostas
const responses = {
  "adeus": ["Volte sempre!", "Fico feliz em poder ajudar, volte sempre."],
  "tudo bem": ["Tudo √≥timo, e voc√™?", "Estou bem, obrigado por perguntar!"],
  "obrigado": ["De nada!", "Por nada! Estou aqui para ajudar."],
  "brunno": ["Brunno √© um buxa professor! üë®‚Äçüè´", "Adoro as aulas do Brunno!"]
};
const trackingResponses = {
  "rastreio": ["O produto est√° em rota de entrega.", "O produtos est√° passando por nossa central de distribui√ß√£o.",
    "O produto est√° passando pelo procedimento de importa√ß√£o", "O produto est√° em tr√¢nsito para o pa√≠s de destino"],
  "tempo": ["Em 3 dias", "Em 8 dias", "Amanh√£", "Nunca"]
}

let contextoPr√≥ximo = null; // contexto futuro
let contexto = null; //salva contexto da conversa
let userName = null; // mem√≥ria do nome do usu√°rio
let dadosColetados = {}; // mem√≥ria para dados coletados

// Respostas do chatbot
function getBotResponse(input) {
  input = input.toLowerCase();
  
  if (contexto != null) {
    return ResponseWithContext(input);
  }

  if (input.includes("1") || input.includes("garantia")) {
    if (userName === null) {
      contexto = "pedindo_nome";
      contextoPr√≥ximo = "garantia";
      return 'Antes de prosseguirmos, por favor, forne√ßa seu nome.';
    }
    contexto = "garantia";
    return "Voc√™ selecionou 'Garantia'. Poderia me passar o nome e c√≥digo do produto?";
  }

  if (input.includes("2") || input.includes("rastrear")) {
    if (userName === null) {
      contexto = "pedindo_nome";
      contextoPr√≥ximo = "rastreio";
      return 'Antes de prosseguirmos, por favor, forne√ßa seu nome.';
    }
    contexto = "rastreio";
    return "Voc√™ selecionou 'Rastrear produto'. Poderia me passar o c√≥digo de rastreio do produto?";
  }

  // Cumprimento com base no hor√°rio
  if (input.includes("oi") || input.includes("ol√°") || input.includes("ola")) {
    return greetingByTime();
  }

  // Guardar nome do usu√°rio
  if (input.includes("meu nome √©")) {
    userName = input.split("meu nome √©")[1].trim();
    return `Prazer em conhecer voc√™, ${userName}!`;
  }

  if (input.includes("quem sou eu") || input.includes("meu nome?")) {
    return userName ? `Voc√™ √© ${userName}, claro! üòâ` : "Ainda n√£o sei seu nome.";
  }

  // Verificar no dicion√°rio
  for (let key in responses) {
    if (input.includes(key)) {
      const possibleReplies = responses[key];
      return possibleReplies[Math.floor(Math.random() * possibleReplies.length)];
    }
  }

  return "Ainda n√£o sei responder isso... ü§î";
}

// Fun√ß√£o para cumprimento com base no hor√°rio
function greetingByTime() {
  const hour = new Date().getHours();
  if (hour < 12) return "Ol√°, Bom dia! ‚òÄÔ∏è";
  if (hour < 18) return "Oi, Boa tarde! üå§Ô∏è";
  return "Oi, Boa noite! üåô";
}

// Captura a mensagem do usu√°rio
function sendMessage() {
  
  const inputField = document.getElementById("user-input");
  const userText = inputField.value.trim();

  if (userText === "") {
    return;
  }

  appendMessage(userText, "user-message");

  // Exibe "digitando..."
  setTimeout(() => {
    appendMessage("Digitando...", "bot-message temp");
  }, 300);

  // Gera resposta do bot
  setTimeout(() => {
    document.querySelector(".temp")?.remove();
    const botReply = getBotResponse(userText);
    appendMessage(botReply, "bot-message");
  }, 1500);

  inputField.value = "";
}

// Adiciona mensagens ao chat (limita 20 no m√°ximo)
function appendMessage(text, className) {
  const chatBox = document.getElementById("chat-box");
  const message = document.createElement("div");
  message.className = className;
  message.innerText = text;
  chatBox.appendChild(message);

  // Limite de 20 mensagens
  if (chatBox.children.length > 20) {
    chatBox.removeChild(chatBox.firstChild);
  }

  chatBox.scrollTop = chatBox.scrollHeight;
}

// Limpar chat
function clearChat() {
  const chatBox = document.getElementById("chat-box");
  const hasUserMessage = chatBox.querySelector(".user-message");
  if (!hasUserMessage) return; // n√£o limpa se n√£o houver mensagem do usu√°rio
  chatBox.innerHTML = '<div class="bot-message">Ol√°, eu sou o Jonas, seu assistente virtual, como poderia ajudar? <br> Digite o n√∫mero de acordo com o problema:<br> <br> 1 - Garantia do consumidor <br> 2 - Rastrear produto </div>';
  userName = null; // reseta mem√≥ria
  contexto = null; // reseta contexto
  dadosColetados = {}; // reseta dados coletados
}

function ResponseWithContext(input) {
  
  if (contexto === "pedindo_nome")  {
    userName = input.charAt(0).toUpperCase() + input.slice(1);
    contexto = contextoPr√≥ximo;
    contextoPr√≥ximo = null;
    mensagemfinal = `Prazer em conhecer voc√™, ${userName}!`;
    if (contexto === "garantia") {
      return mensagemfinal + "\nVoc√™ selecionou 'Garantia'. Poderia me passar o nome e c√≥digo do produto?";
    } else {
      return mensagemfinal + "\nVoc√™ selecionou 'Rastrear produto'. Poderia me passar o c√≥digo de rastreio do produto?";
    }
  }

  if (contexto === "garantia") {
    dadosColetados.produto = input;
    contexto = "garantia_data";
    return "Obrigado! Agora, por favor, informe a data da compra (DD/MM/AAAA).";
  }
  if (contexto === "garantia_data") {
    dadosColetados.dataCompra = input;
    contexto = "garantia_descri√ß√£o"; 
    return `Perfeito! Agora, por favor, descreva o problema que voc√™ est√° enfrentando com o ${dadosColetados.produto}.`;
  }
  if (contexto === "garantia_descri√ß√£o") {
    dadosColetados.descri√ß√£o = input;
    contexto = "garantia_contato"; 
    return `Obrigado pela descri√ß√£o. Antes de finalizarmos, forne√ßa um e-mail ou telefone para contato.`;
  }
  if (contexto === "garantia_contato") {
    dadosColetados.contato = input;
    mensagemFinal = `Obrigado, ${userName ? userName : ''}! Coletamos as seguintes informa√ß√µes:\n-Produto: ${dadosColetados.produto}\n-Data da Compra: ${dadosColetados.dataCompra}\n-Descri√ß√£o do Problema: ${dadosColetados.descri√ß√£o}\n-Contato: ${dadosColetados.contato}\nNossa equipe entrar√° em contato em breve para ajudar com sua garantia.`;
    dadosColetados = {};
    contexto = null;
    return mensagemFinal;
  }
  if (contexto === "rastreio") {
    dadosColetados.rastreio = input;

    const possibleReplies2 = trackingResponses['rastreio'];
    estado = possibleReplies2[Math.floor(Math.random() * possibleReplies2.length)];
    const possibleReplies3 = trackingResponses['tempo'];
    tempo = possibleReplies3[Math.floor(Math.random() * possibleReplies3.length)];

    mensagemFinal = 'C√≥digo do produto: ' + dadosColetados.rastreio + '\nEstado do produto: ' + estado + '\n Tempo previsto para entrega: ' + tempo;
    contexto = null;
    dadosColetados = {};
    return mensagemFinal;
  }

  }

  function sendWithEnter(event) {
    if (event.key === "Enter") {
      sendMessage();
    }
  }